{"ast":null,"code":"module.exports = function (adapter) {\n  const buildLinks = function (link) {\n    if (link == null) {\n      return;\n    }\n    if (link.self != null || link.related != null) {\n      return link;\n    } else {\n      return {\n        self: link\n      };\n    }\n  };\n  return class Presenter {\n    static adapter = adapter;\n    static type = 'objects';\n    constructor(scope) {\n      if (scope == null) {\n        scope = {};\n      }\n      this.scope = scope;\n    }\n    id(instance) {\n      return this.constructor.adapter.id(instance);\n    }\n\n    //eslint-disable-next-line no-unused-vars\n    selfLinks(instance) {}\n    links() {}\n    relationships() {}\n    attributes(instance) {\n      if (instance == null) {\n        return null;\n      }\n      const attributes = {\n        ...this.constructor.adapter.get(instance)\n      };\n      delete attributes['id'];\n      const relationships = this.relationships();\n      for (let key in relationships) {\n        delete attributes[key];\n      }\n      return attributes;\n    }\n    includeRelationships(scope, instance) {\n      const relationships = this.relationships();\n      const result = [];\n      for (var key in relationships) {\n        const factory = relationships[key];\n        if (!factory) throw new Error(`Presenter for ${key} in ${this.constructor.type} is not defined`);\n        const presenter = new factory(scope);\n        const data = this.constructor.adapter.get(instance, key);\n        result.push(presenter.toJSON(data, {\n          include: true\n        }));\n      }\n      return result;\n    }\n    buildRelationships(instance) {\n      if (instance == null) {\n        return null;\n      }\n      const rels = this.relationships();\n      const links = this.links(instance) || {};\n      let relationships = null;\n      for (var key in rels) {\n        let data = this.constructor.adapter.get(instance, key);\n        var presenter = rels[key];\n        var buildData = d => {\n          return data = {\n            id: this.constructor.adapter.id(d),\n            type: presenter.type\n          };\n        };\n        const build = d => {\n          const rel = {};\n          if (d != null) {\n            rel.data = buildData(d);\n          }\n          if (links[key] != null) {\n            rel.links = buildLinks(links[key]);\n          } else if (d == null) {\n            rel.data = null;\n          }\n          return rel;\n        };\n        if (!relationships) {\n          relationships = {};\n        }\n        if (!relationships[key]) {\n          relationships[key] = {};\n        }\n        if (data instanceof Array) {\n          relationships[key].data = data.map(buildData);\n          if (links[key] != null) {\n            relationships[key].links = buildLinks(links[key]);\n          }\n        } else {\n          relationships[key] = build(data);\n        }\n      }\n      return relationships;\n    }\n    buildSelfLink(instance) {\n      return buildLinks(this.selfLinks(instance));\n    }\n    toJSON(instanceOrCollection, options) {\n      if (options == null) {\n        options = {};\n      }\n      if (options.meta != null) {\n        this.scope.meta = options.meta;\n      }\n      if (options.links != null) {\n        this.scope.links = options.links;\n      }\n      if (!this.scope.data) {\n        this.scope.data = null;\n      }\n      if (instanceOrCollection == null) {\n        return this.scope;\n      }\n      if (instanceOrCollection instanceof Array) {\n        const collection = instanceOrCollection;\n        if (!this.scope.data) {\n          this.scope.data = [];\n        }\n        collection.forEach(instance => {\n          return this.toJSON(instance, options);\n        });\n      } else {\n        const instance = instanceOrCollection;\n        let added = true;\n        const model = {\n          id: this.id(instance),\n          type: this.constructor.type,\n          attributes: this.attributes(instance)\n        };\n        if (model.id === undefined) {\n          delete model.id;\n        }\n        const relationships = this.buildRelationships(instance);\n        if (relationships != null) {\n          model.relationships = relationships;\n        }\n        const links = this.buildSelfLink(instance);\n        if (links != null) {\n          model.links = links;\n        }\n        if (options.include) {\n          if (!this.scope.included) {\n            this.scope.included = [];\n          }\n          if (!this.scope.included.concat(this.scope.data).some(i => i.id === model.id && i.type === model.type)) {\n            this.scope.included.push(model);\n          } else {\n            added = false;\n          }\n        } else if (this.scope.data != null) {\n          if (!(this.scope.data instanceof Array) || !this.scope.data.some(i => i.id === model.id)) {\n            this.scope.data.push(model);\n          } else {\n            added = false;\n          }\n        } else {\n          this.scope.data = model;\n        }\n        if (added) {\n          this.includeRelationships(this.scope, instance);\n        }\n      }\n      return this.scope;\n    }\n    render(instanceOrCollection, options) {\n      return this.toJSON(instanceOrCollection, options);\n    }\n    static toJSON() {\n      return new this().toJSON(...arguments);\n    }\n    static render() {\n      return new this().render(...arguments);\n    }\n  };\n};","map":{"version":3,"names":["module","exports","adapter","buildLinks","link","self","related","Presenter","type","constructor","scope","id","instance","selfLinks","links","relationships","attributes","get","key","includeRelationships","result","factory","Error","presenter","data","push","toJSON","include","buildRelationships","rels","buildData","d","build","rel","Array","map","buildSelfLink","instanceOrCollection","options","meta","collection","forEach","added","model","undefined","included","concat","some","i","render","arguments"],"sources":["C:/Users/ASUS/Desktop/OFPPT 2023-2024/Mechbook/React-Redux/tennis-App/tennis-app/node_modules/yayson/src/yayson/presenter.js"],"sourcesContent":["module.exports = function (adapter) {\n  const buildLinks = function (link) {\n    if (link == null) {\n      return\n    }\n    if (link.self != null || link.related != null) {\n      return link\n    } else {\n      return { self: link }\n    }\n  }\n\n  return class Presenter {\n    static adapter = adapter\n    static type = 'objects'\n\n    constructor(scope) {\n      if (scope == null) {\n        scope = {}\n      }\n      this.scope = scope\n    }\n\n    id(instance) {\n      return this.constructor.adapter.id(instance)\n    }\n\n    //eslint-disable-next-line no-unused-vars\n    selfLinks(instance) {}\n\n    links() {}\n\n    relationships() {}\n\n    attributes(instance) {\n      if (instance == null) {\n        return null\n      }\n      const attributes = { ...this.constructor.adapter.get(instance) }\n      delete attributes['id']\n\n      const relationships = this.relationships()\n      for (let key in relationships) {\n        delete attributes[key]\n      }\n      return attributes\n    }\n\n    includeRelationships(scope, instance) {\n      const relationships = this.relationships()\n      const result = []\n      for (var key in relationships) {\n        const factory = relationships[key]\n        if (!factory) throw new Error(`Presenter for ${key} in ${this.constructor.type} is not defined`)\n\n        const presenter = new factory(scope)\n\n        const data = this.constructor.adapter.get(instance, key)\n        result.push(presenter.toJSON(data, { include: true }))\n      }\n      return result\n    }\n\n    buildRelationships(instance) {\n      if (instance == null) {\n        return null\n      }\n      const rels = this.relationships()\n      const links = this.links(instance) || {}\n      let relationships = null\n      for (var key in rels) {\n        let data = this.constructor.adapter.get(instance, key)\n        var presenter = rels[key]\n        var buildData = (d) => {\n          return (data = {\n            id: this.constructor.adapter.id(d),\n            type: presenter.type,\n          })\n        }\n        const build = (d) => {\n          const rel = {}\n          if (d != null) {\n            rel.data = buildData(d)\n          }\n          if (links[key] != null) {\n            rel.links = buildLinks(links[key])\n          } else if (d == null) {\n            rel.data = null\n          }\n          return rel\n        }\n        if (!relationships) {\n          relationships = {}\n        }\n        if (!relationships[key]) {\n          relationships[key] = {}\n        }\n        if (data instanceof Array) {\n          relationships[key].data = data.map(buildData)\n          if (links[key] != null) {\n            relationships[key].links = buildLinks(links[key])\n          }\n        } else {\n          relationships[key] = build(data)\n        }\n      }\n      return relationships\n    }\n\n    buildSelfLink(instance) {\n      return buildLinks(this.selfLinks(instance))\n    }\n\n    toJSON(instanceOrCollection, options) {\n      if (options == null) {\n        options = {}\n      }\n      if (options.meta != null) {\n        this.scope.meta = options.meta\n      }\n      if (options.links != null) {\n        this.scope.links = options.links\n      }\n      if (!this.scope.data) {\n        this.scope.data = null\n      }\n\n      if (instanceOrCollection == null) {\n        return this.scope\n      }\n\n      if (instanceOrCollection instanceof Array) {\n        const collection = instanceOrCollection\n        if (!this.scope.data) {\n          this.scope.data = []\n        }\n        collection.forEach((instance) => {\n          return this.toJSON(instance, options)\n        })\n      } else {\n        const instance = instanceOrCollection\n        let added = true\n        const model = {\n          id: this.id(instance),\n          type: this.constructor.type,\n          attributes: this.attributes(instance),\n        }\n        if (model.id === undefined) {\n          delete model.id\n        }\n        const relationships = this.buildRelationships(instance)\n        if (relationships != null) {\n          model.relationships = relationships\n        }\n        const links = this.buildSelfLink(instance)\n        if (links != null) {\n          model.links = links\n        }\n\n        if (options.include) {\n          if (!this.scope.included) {\n            this.scope.included = []\n          }\n          if (!this.scope.included.concat(this.scope.data).some((i) => i.id === model.id && i.type === model.type)) {\n            this.scope.included.push(model)\n          } else {\n            added = false\n          }\n        } else if (this.scope.data != null) {\n          if (!(this.scope.data instanceof Array) || !this.scope.data.some((i) => i.id === model.id)) {\n            this.scope.data.push(model)\n          } else {\n            added = false\n          }\n        } else {\n          this.scope.data = model\n        }\n\n        if (added) {\n          this.includeRelationships(this.scope, instance)\n        }\n      }\n      return this.scope\n    }\n\n    render(instanceOrCollection, options) {\n      return this.toJSON(instanceOrCollection, options)\n    }\n\n    static toJSON() {\n      return new this().toJSON(...arguments)\n    }\n\n    static render() {\n      return new this().render(...arguments)\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}